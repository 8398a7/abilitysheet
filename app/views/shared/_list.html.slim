table.datatable
  thead
    th.center DJNAME
    th.center IIDX-ID
    th.center 段位
    th.center 所属
    th.center 最終更新日
    th.center 最終更新楽曲
    th.center ランプ情報
    - if user_signed_in?
      th.center ライバル情報
  tbody
    - show_rival_buttons = user_signed_in?
    - @users.each do |user|
      - user = user.decorate
      - score = @scores_map[user.id].try(:decorate)
      - iidxid = user.iidxid
      tr
        td.center = link_to user.djname, sheet_path(iidxid: iidxid, type: 'hard')
        td.center = iidxid
        td.center bgcolor=user.dan_color = user.dan
        td.center = user.belongs
        - if score
          td.center = link_to score.updated_at, show_log_path(user.iidxid, score.updated_at)
          td.center = score.title
          td.center bgcolor=Static::COLOR[score.state]
        - else
          td
          td
          td
        - if show_rival_buttons
          td
            - if current_user.rival && current_user.rival.include?(user.iidxid)
              = link_to 'ライバル比較', clear_rival_path(user.iidxid)
              | &nbsp;|&nbsp;
              = link_to 'ライバルを外す', remove_rival_path(user.iidxid), method: :post, remote: true
            - elsif current_user.iidxid != user.iidxid
              = link_to 'ライバル比較', clear_rival_path(user.iidxid)
              | &nbsp;|&nbsp;
              = link_to 'ライバルにする', register_rival_path(user.iidxid), method: :post, remote: true
coffee:
  $('.datatable').dataTable
    order: [4, 'desc']
    aLengthMenu: [25]
