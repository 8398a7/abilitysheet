- @title = @logs.first.created_date
p
  - if @prev_update
    = link_to @prev_update, logs_path(params[:id], @prev_update)
    | &nbsp;<&nbsp;
  = @logs.first.created_date
  - if @next_update
    | &nbsp;>&nbsp;
    = link_to @next_update, logs_path(params[:id], @next_update)

- if user_signed_in? && (current_user.iidxid == params[:id] || current_user.admin?)
  p style='margin-bottom: 0px' 削除ボタン
  = react_component_wrapper 'DestroyButtonDisplayToggle'
= react_component_wrapper 'TwitterSharedButton', text: "更新履歴(#{@logs.first.created_date})"
hr
section.accordions
  article.accordion.is-primary
    .accordion-header
      p = icon 'calendar', 'カレンダーで見る'
      button.toggle aria-label='toggle'
    .accordion-body
      .accordion-content
        = react_component_wrapper 'LogCalendar', iidxid: params[:id]
hr

.modal#log-modal
table.table.is-fullwidth.datatable
  thead
    tr
      th 楽曲
      th スコア
      th BP
      th 旧
      th 新
  tbody
    - @logs.each do |log|
      tr
        td
          - if user_signed_in? && (current_user.iidxid == params[:id] || current_user.admin?)
            = link_to log_path(log.id), method: :delete, remote: true, class: 'button is-danger is-small destroy-button', style: 'display: none',  data: { confirm: '削除してよろしいですか？ランプは旧ランプの状態へ戻ります' }
              = icon 'trash', '削除'
            |&nbsp;&nbsp;
          = link_to_if current_user.try(:iidxid) == params[:id], log.title, edit_log_path(log.id), remote: true
        td
          = log.new_score
          - diff = log.new_score.to_i - log.pre_score.to_i
          - if diff != 0
            = sprintf('(%+d)', diff)
        td
          = log.new_bp
          - diff = log.pre_bp.to_i - log.new_bp.to_i
          - if 0 < diff
            = sprintf('(%+d)', diff * -1)
        td bgcolor=@color[log.pre_state]
        td bgcolor=@color[log.new_state]

javascript:
  logs_count = '#{@logs.count}'

  if ($('[id^=DataTables_Table]').length === 0) {
    $('.datatable').dataTable({
      aLengthMenu: [logs_count],
      columnDefs: [
        {
          targets: [3, 4],
          orderable: false
        },
        {
          targets: [1, 2],
          type: 'custom'
        }
      ]
    });
  }
