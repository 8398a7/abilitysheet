apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "abilitysheet.puma.name" . }}
  labels:
    app.kubernetes.io/name: {{ template "abilitysheet.name" . }}
    helm.sh/chart: {{ template "abilitysheet.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
    app.kubernetes.io/component: puma
spec:
  replicas: {{ .Values.puma.replica }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ template "abilitysheet.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/component: puma
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ template "abilitysheet.name" . }}
        helm.sh/chart: {{ template "abilitysheet.chart" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/managed-by: {{ .Release.Service }}
        app.kubernetes.io/component: puma
      annotations:
        checksum/cm: {{ include (print $.Template.BasePath "/rails-cm.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/rails-secret.yaml") . | sha256sum }}
    spec:
      restartPolicy: Always
      containers:
      - name: puma
        image: {{ .Values.rails.image.repositry }}:{{ .Values.rails.image.tag }}
        imagePullPolicy: IfNotPresent
        command: ["puma", "-C", "config/puma.rb"]
        envFrom:
        - configMapRef:
            name: {{ template "abilitysheet.rails-env.name" . }}
        - secretRef:
            name: {{ template "abilitysheet.rails-env.name" . }}
        env:
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ template "abilitysheet.pg.name" . }}
              key: postgresql-password
        livenessProbe:
          httpGet:
            port: 3000
